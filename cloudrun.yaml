apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: malware-detonation-platform
  annotations:
    run.googleapis.com/launch-stage: BETA
    run.googleapis.com/description: "Malware analysis and detonation platform"
spec:
  template:
    metadata:
      annotations:
        # Autoscaling configuration
        autoscaling.knative.dev/maxScale: "5"
        autoscaling.knative.dev/minScale: "1"
        run.googleapis.com/cpu-throttling: "false"
        
        # Startup optimization
        run.googleapis.com/startup-cpu-boost: "true"
        run.googleapis.com/startup-probe-period-seconds: "180"
        run.googleapis.com/startup-probe-failure-threshold: "10"
        
        # Health check configuration
        run.googleapis.com/liveness-probe-period-seconds: "30"
        
        # Generation 2 execution environment
        run.googleapis.com/execution-environment: "gen2"
        run.googleapis.com/vpc-access-egress: "all-traffic"
    spec:
      # Service account - Cloud Build will substitute the project ID
      serviceAccountName: malware-platform-sa
      
      # Container concurrency and timeout
      containerConcurrency: 80
      timeoutSeconds: 300
      
      containers:
      - image: gcr.io/$PROJECT_ID/malware-detonation-platform:$COMMIT_SHA
        # Resource allocation
        resources:
          limits:
            cpu: "2"
            memory: "4Gi"
          requests:
            cpu: "1" 
            memory: "2Gi"
        
        # Environment variables
        env:
          # Core configuration
          - name: DEBUG
            value: "false"
          - name: APP_NAME
            value: "Malware Detonation Platform"
          - name: PORT
            value: "8080"
          
          # Database configuration
          - name: DATABASE_PATH
            value: "/app/data/malware_platform.db"
          - name: DB_POOL_SIZE
            value: "5"
          
          # Upload configuration
          - name: UPLOAD_FOLDER
            value: "/app/data/uploads"
          - name: MAX_UPLOAD_SIZE_MB
            value: "100"
          
          # Startup optimization
          - name: GENERATE_TEMPLATES
            value: "false"
          - name: INITIALIZE_GCP
            value: "true"
          - name: SKIP_DB_INIT
            value: "false"
          
          # GCP configuration - Cloud Build will substitute the project ID
          - name: GCP_PROJECT_ID
            value: "$PROJECT_ID"
          - name: GCP_STORAGE_BUCKET
            value: "malware-samples-$PROJECT_ID"
          - name: GCP_RESULTS_BUCKET
            value: "detonation-results-$PROJECT_ID"
          - name: GCP_REGION
            valueFrom:
              fieldRef:
                fieldPath: metadata.annotations['run.googleapis.com/region']
          
          # VM configuration
          - name: VM_NETWORK
            value: "detonation-network"
          - name: VM_SUBNET
            value: "detonation-subnet"
          - name: VM_MACHINE_TYPE
            value: "e2-medium"
          
          # Application configuration
          - name: MAX_CONCURRENT_DETONATIONS
            value: "3"
          - name: DETONATION_TIMEOUT_MINUTES 
            value: "60"
          - name: GUNICORN_WORKERS
            value: "1"
          - name: GUNICORN_TIMEOUT
            value: "300"
          
          # Security configuration
          - name: SECRET_KEY
            value: "production-secret-key-$PROJECT_ID"
          
          # Feature flags
          - name: ENABLE_ADVANCED_ANALYSIS
            value: "true"
          - name: ENABLE_DATA_EXPORT
            value: "true"
          - name: ENABLE_VISUALIZATION
            value: "true"
        
        # Port configuration
        ports:
          - name: http1
            containerPort: 8080
        
        # Startup probe
        startupProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 18
          successThreshold: 1
        
        # Liveness probe
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 180
          periodSeconds: 30
          timeoutSeconds: 4
          failureThreshold: 3
          successThreshold: 1
        
        # Readiness probe
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 4
          failureThreshold: 3
          successThreshold: 1
  
  # Traffic configuration
  traffic:
    - percent: 100
      latestRevision: true
