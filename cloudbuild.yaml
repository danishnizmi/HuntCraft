# Cloud Build configuration file for the Malware Detonation Platform
steps:
  # Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/malware-detonation-platform:$COMMIT_SHA', '.']
    timeout: '1200s'

  # Tag the image as latest
  - name: 'gcr.io/cloud-builders/docker'
    args: ['tag', 'gcr.io/$PROJECT_ID/malware-detonation-platform:$COMMIT_SHA', 'gcr.io/$PROJECT_ID/malware-detonation-platform:latest']

  # Push the images to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/malware-detonation-platform:$COMMIT_SHA']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/malware-detonation-platform:latest']

  # Create service account if it doesn't exist
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud iam service-accounts describe malware-platform-sa@$PROJECT_ID.iam.gserviceaccount.com 2>/dev/null || \
        gcloud iam service-accounts create malware-platform-sa \
          --display-name="Malware Detonation Platform Service Account"

  # Grant necessary permissions to the service account
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        for role in roles/storage.admin roles/pubsub.editor roles/compute.admin roles/secretmanager.secretAccessor; do
          gcloud projects add-iam-policy-binding $PROJECT_ID \
            --member="serviceAccount:malware-platform-sa@$PROJECT_ID.iam.gserviceaccount.com" \
            --role="$$role" || echo "Already has $$role"
        done

  # Create Pub/Sub topic and subscription
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud pubsub topics describe detonation-notifications --project=$PROJECT_ID 2>/dev/null || \
        gcloud pubsub topics create detonation-notifications --project=$PROJECT_ID
        
        gcloud pubsub subscriptions describe detonation-app-sub --project=$PROJECT_ID 2>/dev/null || \
        gcloud pubsub subscriptions create detonation-app-sub --topic=detonation-notifications --project=$PROJECT_ID

  # Create storage buckets
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gsutil ls -p $PROJECT_ID gs://malware-samples-$PROJECT_ID 2>/dev/null || \
        gsutil mb -p $PROJECT_ID -l ${_REGION} gs://malware-samples-$PROJECT_ID
        
        gsutil ls -p $PROJECT_ID gs://detonation-results-$PROJECT_ID 2>/dev/null || \
        gsutil mb -p $PROJECT_ID -l ${_REGION} gs://detonation-results-$PROJECT_ID

  # Create Secret Manager secret for app key if it doesn't exist
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        if ! gcloud secrets describe malware-platform-secrets --project=$PROJECT_ID 2>/dev/null; then
          echo "Creating secret..."
          echo -n "$$RANDOM-$$RANDOM-$$RANDOM-$$RANDOM" | gcloud secrets create malware-platform-secrets --data-file=- --project=$PROJECT_ID
          
          gcloud secrets add-iam-policy-binding malware-platform-secrets \
            --member="serviceAccount:malware-platform-sa@$PROJECT_ID.iam.gserviceaccount.com" \
            --role="roles/secretmanager.secretAccessor" \
            --project=$PROJECT_ID
        fi

  # Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'malware-detonation-platform'
      - '--image=gcr.io/$PROJECT_ID/malware-detonation-platform:$COMMIT_SHA'
      - '--region=${_REGION}'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--service-account=malware-platform-sa@$PROJECT_ID.iam.gserviceaccount.com'
      - '--memory=2Gi'
      - '--cpu=2'
      - '--set-env-vars=GCP_PROJECT_ID=$PROJECT_ID,GCP_REGION=${_REGION},GCP_ZONE=${_REGION}-a,GCP_STORAGE_BUCKET=malware-samples-$PROJECT_ID,GCP_RESULTS_BUCKET=detonation-results-$PROJECT_ID,APP_NAME=Malware Detonation Platform,DEBUG=false'
      - '--set-secrets=SECRET_KEY=malware-platform-secrets:latest'

# Configuration options
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'

# Images to push
images:
  - 'gcr.io/$PROJECT_ID/malware-detonation-platform:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/malware-detonation-platform:latest'

# Default substitution values
substitutions:
  _REGION: us-central1

# Build timeout
timeout: '1800s'
