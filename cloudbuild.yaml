# Cloud Build configuration file for the Malware Detonation Platform
steps:
  # Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-image'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/malware-detonation-platform:$COMMIT_SHA', '.']
    timeout: '1800s'

  # Push the image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-image'
    args: ['push', 'gcr.io/$PROJECT_ID/malware-detonation-platform:$COMMIT_SHA']

  # Create storage buckets and service account
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'setup-resources'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Create malware samples bucket
        gsutil mb -l $_REGION gs://malware-samples-$PROJECT_ID || echo "Bucket already exists"
        gsutil defacl set private gs://malware-samples-$PROJECT_ID
        
        # Create results bucket
        gsutil mb -l $_REGION gs://detonation-results-$PROJECT_ID || echo "Bucket already exists"
        gsutil defacl set private gs://detonation-results-$PROJECT_ID
        
        # Create service account if needed
        if ! gcloud iam service-accounts list --filter="email:malware-platform-sa@$PROJECT_ID.iam.gserviceaccount.com" | grep -q malware-platform-sa; then
          gcloud iam service-accounts create malware-platform-sa --display-name="Malware Detonation Platform Service Account"
        fi
        
        # Grant necessary permissions
        gcloud projects add-iam-policy-binding $PROJECT_ID \
          --member="serviceAccount:malware-platform-sa@$PROJECT_ID.iam.gserviceaccount.com" \
          --role="roles/storage.admin"
          
        gcloud projects add-iam-policy-binding $PROJECT_ID \
          --member="serviceAccount:malware-platform-sa@$PROJECT_ID.iam.gserviceaccount.com" \
          --role="roles/pubsub.publisher"
          
        gcloud projects add-iam-policy-binding $PROJECT_ID \
          --member="serviceAccount:malware-platform-sa@$PROJECT_ID.iam.gserviceaccount.com" \
          --role="roles/pubsub.subscriber"
          
        gcloud pubsub topics create detonation-notifications 2>/dev/null || echo "Topic exists"
        gcloud pubsub subscriptions create detonation-app-sub --topic=detonation-notifications 2>/dev/null || echo "Subscription exists"

  # Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy-cloud-run'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Deploy to Cloud Run using direct gcloud command
        gcloud run deploy malware-detonation-platform \
          --image gcr.io/$PROJECT_ID/malware-detonation-platform:$COMMIT_SHA \
          --platform managed \
          --region $_REGION \
          --service-account malware-platform-sa@$PROJECT_ID.iam.gserviceaccount.com \
          --allow-unauthenticated \
          --memory 4Gi \
          --cpu 2 \
          --timeout 300s \
          --concurrency 80 \
          --set-env-vars="GCP_PROJECT_ID=$PROJECT_ID,GCP_REGION=$_REGION,GCP_STORAGE_BUCKET=malware-samples-$PROJECT_ID,GCP_RESULTS_BUCKET=detonation-results-$PROJECT_ID,MAX_CONCURRENT_DETONATIONS=3,DEBUG=false"

  # Tag the image as latest
  - name: 'gcr.io/cloud-builders/docker'
    id: 'tag-latest'
    args: ['tag', 'gcr.io/$PROJECT_ID/malware-detonation-platform:$COMMIT_SHA', 'gcr.io/$PROJECT_ID/malware-detonation-platform:latest']

  # Push the latest tag
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-latest'
    args: ['push', 'gcr.io/$PROJECT_ID/malware-detonation-platform:latest']

  # Show deployed service URL
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'show-url'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "âœ… Deployment complete!"
        echo "Service URL:"
        gcloud run services describe malware-detonation-platform --region=$_REGION --format='value(status.url)'
        echo "Storage Buckets:"
        echo "- Malware samples: gs://malware-samples-$PROJECT_ID"
        echo "- Detonation results: gs://detonation-results-$PROJECT_ID"

# Configuration options
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
  dynamicSubstitutions: true

# Images to push
images:
  - 'gcr.io/$PROJECT_ID/malware-detonation-platform:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/malware-detonation-platform:latest'

# Default substitution values
substitutions:
  _REGION: us-central1

# Build timeout
timeout: '3600s'
